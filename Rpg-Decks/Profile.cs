// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var profile = Profile.FromJson(jsonString);

namespace QuickType //basically an extension!
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Profile
    {
        [JsonProperty("Profile")]
        public List<ProfileElement> ProfileList { get; set; }
    }

    public partial class ProfileElement
    {
        [JsonProperty("ProfileName")]
        public string ProfileName { get; set; }

        [JsonProperty("HitDie")]
        public string HitDie { get; set; }

        [JsonProperty("RpgClass")]
        public string RpgClass { get; set; }

        [JsonProperty("Level")]
        public int Level { get; set; }

        [JsonProperty("XpValue")]
        public float XpValue { get; set; }

        [JsonProperty("HpValue")]
        public int HpValue { get; set; }

        [JsonProperty("Proficiency")]
        public int Proficiency { get; set; }

        [JsonProperty("AC")]
        public int Ac { get; set; }

        [JsonProperty("Skills")]
        public List<string> Skills { get; set; }
    }

    public partial class Profile  //extract
    {
        public static Profile FromJson(string json) => JsonConvert.DeserializeObject<Profile>(json, QuickType.Converter.Settings);
    }

    public static class Serialize  //input
    {
        public static string ToJson(this Profile self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
