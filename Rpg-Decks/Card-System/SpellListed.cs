// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var spell = Spell.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SpellListed
    {
        [JsonProperty("Json")]
        public List<Json> Json { get; set; }
    }

    public partial class Json
    {
        [JsonProperty("CardName")]
        public string CardName { get; set; }

        [JsonProperty("Level")]
        public string Level { get; set; }

        [JsonProperty("School")]
        public string School { get; set; }

        [JsonProperty("CastingTime")]
        public string CastingTime { get; set; }

        [JsonProperty("Range")]
        public string Range { get; set; }

        [JsonProperty("Components")]
        public string Components { get; set; }

        [JsonProperty("Materials")]
        public string Materials { get; set; }

        [JsonProperty("Duration")]
        public string Duration { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("AtHigherLevels")]
        public string AtHigherLevels { get; set; }

        [JsonProperty("Catagory")]
        public string Catagory { get; set; }

        [JsonProperty("Concentration")]
        public bool Concentration { get; set; }

        [JsonProperty("Ritual")]
        public bool Ritual { get; set; }
    }

    public partial class SpellListed
    {
        public static SpellListed FromJson(string json) => JsonConvert.DeserializeObject<SpellListed>(json, QuickType.Converter.Settings);
    }

    public static class Serialize2
    {
        public static string ToJson2(this Json self) => JsonConvert.SerializeObject(self, Formatting.Indented, QuickType.Converter.Settings);
    }

}